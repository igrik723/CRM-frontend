{"ast":null,"code":"var _jsxFileName = \"/Users/igorhilkevic/Desktop/store/client/src/pages/AuthPage/AuthPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Container, Card, Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { storekeeperEnterAction, salesmanEnterAction, adminEnterAction } from \"../../store/action-creators/action-creators\";\nimport { SHOP_ROUTE, STOCK_ROUTE } from \"../../utils/const\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const check = (login, password) => {\n    // Проводите аутентификацию и получайте токен или другие данные.\n    // В данном примере используется простая проверка для демонстрации.\n\n    if (login === \"storekeeper\" && password === \"admin\") {\n      dispatch(storekeeperEnterAction());\n      // Сохраняем информацию о входе в локальное хранилище\n      localStorage.setItem(\"user\", JSON.stringify({\n        role: \"storekeeper\"\n      }));\n      navigate(STOCK_ROUTE);\n    } else if (login === \"salesman\" && password === \"admin\") {\n      dispatch(salesmanEnterAction());\n      localStorage.setItem(\"user\", JSON.stringify({\n        role: \"salesman\"\n      }));\n      navigate(SHOP_ROUTE);\n    } else if (login === \"admin\" && password === \"admin\") {\n      dispatch(adminEnterAction());\n      localStorage.setItem(\"user\", JSON.stringify({\n        role: \"admin\"\n      }));\n      navigate(SHOP_ROUTE);\n    } else {\n      alert(\"Неправильный логин или пароль\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex justify-content-center align-items-center vh-100\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 600\n      },\n      className: \"d-flex  p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"m-auto\",\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043B\\u043E\\u0433\\u0438\\u043D\",\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          type: \"password\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-4\",\n        variant: \"outline-secondary\",\n        onClick: () => check(login, password),\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthPage, \"y3dU7Opo7idPjSxL/5PRyPQSWww=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","Button","Container","Card","Form","useState","storekeeperEnterAction","salesmanEnterAction","adminEnterAction","SHOP_ROUTE","STOCK_ROUTE","useDispatch","useNavigate","jsxDEV","_jsxDEV","AuthPage","_s","navigate","dispatch","login","setLogin","password","setPassword","check","localStorage","setItem","JSON","stringify","role","alert","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","value","onChange","e","target","type","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/igorhilkevic/Desktop/store/client/src/pages/AuthPage/AuthPage.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Container, Card, Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { storekeeperEnterAction, salesmanEnterAction, adminEnterAction } from \"../../store/action-creators/action-creators\";\nimport { SHOP_ROUTE, STOCK_ROUTE } from \"../../utils/const\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\n\nconst AuthPage = () => {\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const [login, setLogin] = useState('')\n    const [password, setPassword] = useState('')\n\n  const check = (login, password) => {\n    // Проводите аутентификацию и получайте токен или другие данные.\n    // В данном примере используется простая проверка для демонстрации.\n\n    if (login === \"storekeeper\" && password === \"admin\") {\n      dispatch(storekeeperEnterAction());\n      // Сохраняем информацию о входе в локальное хранилище\n      localStorage.setItem(\"user\", JSON.stringify({ role: \"storekeeper\" }));\n      navigate(STOCK_ROUTE);\n    } else if (login === \"salesman\" && password === \"admin\") {\n      dispatch(salesmanEnterAction());\n      localStorage.setItem(\"user\", JSON.stringify({ role: \"salesman\" }));\n      navigate(SHOP_ROUTE);\n    } else if (login === \"admin\" && password === \"admin\") {\n      dispatch(adminEnterAction());\n      localStorage.setItem(\"user\", JSON.stringify({ role: \"admin\" }));\n      navigate(SHOP_ROUTE);\n    } else {\n      alert(\"Неправильный логин или пароль\");\n    }\n  };\n\n    return ( \n        <Container\n            className=\"d-flex justify-content-center align-items-center vh-100\"\n        >\n            <Card\n                style={{ width: 600 }}\n                className=\"d-flex  p-5\"\n            >\n                <h1\n                    className=\"m-auto\"\n                >\n                    Авторизируйтесь\n                </h1>\n                <Form\n                    className=\"d-flex flex-column\"\n                >\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш логин\"\n                        value={login}\n                        onChange={e => setLogin(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"password\"\n                        placeholder=\"Введите ваш пароль\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                </Form>\n                <Button\n                    className=\"mt-4\"\n                    variant=\"outline-secondary\"\n                    onClick={() => check(login, password)}\n                >\n                    Войти\n                </Button>\n            </Card>\n        </Container>\n     );\n}\n \nexport default AuthPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}